#!/bin/bash
set -euo pipefail

readonly directory="$(dirname "$0")"
readonly update_sh="$(basename "$0")"
readonly default_nix="default.nix"
readonly hashes_nix="hashes.nix"

readonly fetch_commit_regex='fetchCommit "([0-9a-f]{40})"'
readonly commit_regex="^[0-9a-f]{40}$"
readonly hash_regex="^[a-z0-9]{52}$"
readonly path_regex="^/nix/store/[a-z0-9]{32}-source$"

declare -A known_hashes new_hashes known_paths new_paths

# read already known hashes and paths
while {
  read trace commit hash path
}; do
  # echo $trace $commit $hash $path
  if [[ $commit =~ $commit_regex && $hash =~ $hash_regex && $path =~ $path_regex ]]; then

    known_hashes[${commit}]="${hash}"
    known_paths[${commit}]="${path}"
  fi
done < <(
  cd "$directory"
  nix-instantiate --eval --expr "builtins.mapAttrs (n: v: builtins.trace \"\${n} \${v.hash} \${v.path}\" v) (import ./${hashes_nix})" --strict 2>&1 1>/dev/null
)

# prefetch archives
while read line; do
  if [[ $line =~ $fetch_commit_regex ]]; then
    commit="${BASH_REMATCH[1]}"
    hash="${known_hashes[${commit}]:-}"
    path="${known_paths[${commit}]:-}"

    echo "Prefetching https://github.com/NixOS/nixpkgs/commit/${commit}"
    if [[ -n "$hash" ]]; then
      nix-prefetch-url --unpack --name source "https://github.com/NixOS/nixpkgs/archive/${commit}.tar.gz" "${hash}" >/dev/null
    else
      {
        read hash
        read path
      } < <(nix-prefetch-url --unpack --name source --print-path "https://github.com/NixOS/nixpkgs/archive/${commit}.tar.gz")
    fi
    echo ""

    if [[ $hash =~ $hash_regex && $path =~ $path_regex ]]; then
      new_hashes[$commit]="$hash"
      new_paths[$commit]="$path"
    fi
  fi
done <"${directory}/${default_nix}"

# persist hashes
{
  echo "# This file was generated by ${update_sh} from the fetchCommit uses in ${default_nix}."
  echo "# Do not edit this file by hand. Instead, edit ${default_nix} and run ${update_sh}"
  echo "{"
  while read commit; do
    hash="${new_hashes[${commit}]}"
    path="${new_paths[${commit}]}"
    echo "  \"${commit}\" = {"
    echo "    hash = \"${hash}\";"
    echo "    path = \"${path}\";"
    echo "  };"
  done < <(printf '%s\n' "${!new_hashes[@]}" | sort)
  echo "}"
} >"${directory}/${hashes_nix}"
