#pragma once

#include <string>
#include <vector>

#include "benchmark_utilities/random_generator.hpp"
#include "tpch_grammar.hpp"

namespace tpch {

/**
 * TextFieldGenerator provides methods to easily generate the text fields specified by TPCH.
 * This includes text consisting of random characters, random strings from dictionaries
 * as well as formatting utilities.
 */
class TextFieldGenerator {
 public:
  /**
   * According to the TPCH specification, there should be 300MB of text generated by a given grammar.
   * The text is later used to draw substrings from to fill multiple columns.
   */
  explicit TextFieldGenerator(benchmark_utilities::RandomGenerator random_generator);

  std::string text_string(size_t lower_length, size_t upper_length);
  std::string v_string(size_t lower_length, size_t upper_length);
  std::string generate_phone_number(uint32_t nationkey);

  static std::string pad_int_with_zeroes(size_t number, size_t length);

  std::string generate_name_of_part();
  std::string generate_type_of_part();
  std::string generate_container_of_part();
  std::string generate_customer_segment();
  std::string generate_order_priority();
  std::string generate_lineitem_instruction();
  std::string generate_lineitem_mode();

  static const std::vector<std::string> nation_names;
  static const std::vector<std::string> region_names;

 protected:
  benchmark_utilities::RandomGenerator _random_gen;
  TpchGrammar _grammar;
  const std::string _text;

  static const std::vector<std::string> part_name_words;

  static const std::vector<std::string> part_type_syllables_1;
  static const std::vector<std::string> part_type_syllables_2;
  static const std::vector<std::string> part_type_syllables_3;

  static const std::vector<std::string> part_container_syllables_1;
  static const std::vector<std::string> part_container_syllables_2;

  static const std::vector<std::string> customer_segments;

  static const std::vector<std::string> order_priorities;

  static const std::vector<std::string> lineitem_instructions;

  static const std::vector<std::string> lineitem_modes;
};
}  // namespace tpch
