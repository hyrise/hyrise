15a16,23
> // clang-format off
> 
> #pragma clang diagnostic push
> #pragma clang diagnostic ignored "-Wshadow"
> #pragma clang diagnostic ignored "-Wshorten-64-to-32"
> 
> #include "../llvm_extensions.hpp"
> 
266a275
>     opossum::SpecializationContext& Context;
271c280,281
<                           const char *nameSuffix, ClonedCodeInfo *codeInfo)
---
>                           const char *nameSuffix, ClonedCodeInfo *codeInfo,
>                           opossum::SpecializationContext& context)
274c284
<           CodeInfo(codeInfo) {}
---
>           CodeInfo(codeInfo), Context(context) {}
379a390,393
>       if (!Cond) {
>         Cond = dyn_cast_or_null<ConstantInt>(opossum::ResolveCondition(BI->getCondition(), Context));
>       }
> 
394a409,413
> 
>     if (!Cond) {
>       Cond = dyn_cast_or_null<ConstantInt>(opossum::ResolveCondition(SI->getCondition(), Context));
>     }
> 
433c452
< void llvm::CloneAndPruneIntoFromInst(Function *NewFunc, const Function *OldFunc,
---
> void opossum::CloneAndPruneIntoFromInst(Function *NewFunc, const Function *OldFunc,
439c458,459
<                                      ClonedCodeInfo *CodeInfo) {
---
>                                      ClonedCodeInfo *CodeInfo,
>                                      opossum::SpecializationContext& Context) {
454c474
<                             NameSuffix, CodeInfo);
---
>                             NameSuffix, CodeInfo, Context);
711c731
< void llvm::CloneAndPruneFunctionInto(Function *NewFunc, const Function *OldFunc,
---
> void opossum::CloneAndPruneFunctionInto(Function *NewFunc, const Function *OldFunc,
717,719c737,740
<                                      Instruction *TheCall) {
<   CloneAndPruneIntoFromInst(NewFunc, OldFunc, &OldFunc->front().front(), VMap,
<                             ModuleLevelChanges, Returns, NameSuffix, CodeInfo);
---
>                                      Instruction *TheCall,
>                                      opossum::SpecializationContext& Context) {
>   opossum::CloneAndPruneIntoFromInst(NewFunc, OldFunc, &OldFunc->front().front(), VMap,
>                             ModuleLevelChanges, Returns, NameSuffix, CodeInfo, Context);
834a856,859
> 
> #pragma clang diagnostic pop
> 
> // clang-format on
